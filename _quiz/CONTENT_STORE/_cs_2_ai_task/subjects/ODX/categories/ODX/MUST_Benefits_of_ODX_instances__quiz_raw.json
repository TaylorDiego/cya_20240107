{
    "question_1": {
        "question": "What is the maximum number of Data Integration Units (DIUs) per source data partition when copying from partition-option-enabled data stores to a single file?",
        "options": {
            "option_a": "2 DIUs",
            "option_b": "4 DIUs",
            "option_c": "256 DIUs",
            "option_d": "No limit on DIUs"
        },
        "answer": "option_b",
        "explanation": "When writing to one single file from partition-option-enabled data stores, the maximum number of DIUs per source data partition is 4."
    },
    "question_2": {
        "question": "Which of the following is NOT a benefit of using Delta-parquet files according to the text?",
        "options": {
            "option_a": "Mitigates day-to-day performance issues",
            "option_b": "Optimized for IOPS speed",
            "option_c": "Reduces initial load benefit",
            "option_d": "Adds overhead due to file bloat"
        },
        "answer": "option_b",
        "explanation": "The text states that parquet files aren't really optimized for IOPS speed, which means that optimization for IOPS speed is not a benefit of using Delta-parquet files."
    },
    "question_3": {
        "question": "What is the recommended solution in the text to speed up Azure Data Factory (ADF) transfers?",
        "options": {
            "option_a": "Increase the number of AzureRuntimes",
            "option_b": "Use a self-hosted integration runtime",
            "option_c": "Decrease the memory limit use setting",
            "option_d": "Partition large tables more extensively"
        },
        "answer": "option_b",
        "explanation": "To speed up ADF, the text suggests running self-hosted integration runtimes, which can be scaled up as far as the budget allows and can be clustered for more performance."
    },
    "question_4": {
        "question": "Where is the packing/unpacking of parquet done when using ADO.net according to the text?",
        "options": {
            "option_a": "On the AzureRuntime",
            "option_b": "On the ODX Server VM",
            "option_c": "In the cloud",
            "option_d": "On the source data store"
        },
        "answer": "option_b",
        "explanation": "Using ADO.net, the packing/unpacking of parquet is done on the ODX Server VM, as mentioned in the text."
    },
    "question_5": {
        "question": "What is the impact of the parquet packing/unpacking process on the system's performance?",
        "options": {
            "option_a": "It increases the system's efficiency",
            "option_b": "It has no significant impact",
            "option_c": "It adds a relatively high overhead due to file bloat",
            "option_d": "It decreases memory usage"
        },
        "answer": "option_c",
        "explanation": "The text indicates that the parquet packing/unpacking process probably adds a relatively high overhead due to file bloat, impacting the system's performance negatively."
    },
    "question_6": {
        "question": "What is the typical spin-up time for an AzureRuntime as mentioned in the text?",
        "options": {
            "option_a": "30 seconds",
            "option_b": "60 seconds",
            "option_c": "5 minutes",
            "option_d": "Instantaneous"
        },
        "answer": "option_b",
        "explanation": "The text states that an AzureRuntime can take 60 seconds to spin up, which is the typical spin-up time mentioned."
    }
}
{    "question_1": {        "question": "What is the recommended practice when implementing custom code in a TimeXtender data warehouse?",        "options": {            "option_a": "Use Custom Table Inserts for better data lineage",            "option_b": "Customize stored procedures as a first option",            "option_c": "Incorporate custom code only when necessary and use Custom Views for maintainability",            "option_d": "Avoid using Global Project Variables in custom scripts"        },        "answer": "option_c",        "explanation": "Custom Views are recommended over Custom Table Inserts because they maintain data lineage and are easier to maintain. Custom code should be used only when TimeXtender's functionality falls short."    },    "question_2": {        "question": "What should be done before deploying a Custom View in TimeXtender?",        "options": {            "option_a": "Map Custom View fields to maintain data lineage",            "option_b": "Customize the stored procedures",            "option_c": "Delete the autogenerated stored procedure",            "option_d": "Execute the Custom Table Insert"        },        "answer": "option_a",        "explanation": "Before deploying a Custom View, it is important to map the fields to maintain data lineage, which is done by right-clicking the view and selecting 'Map Custom View fields'."    },    "question_3": {        "question": "What is the consequence of customizing stored procedures in TimeXtender?",        "options": {            "option_a": "TimeXtender will automatically update the customized stored procedures",            "option_b": "Customized stored procedures will need to be updated manually",            "option_c": "Customized stored procedures enhance TimeXtender's performance",            "option_d": "Customized stored procedures are deleted after each deployment"        },        "answer": "option_b",        "explanation": "Customizing stored procedures means TimeXtender will no longer maintain them, and any updates will need to be done manually, making it the last option to consider."    },    "question_4": {        "question": "How can you add a Script Action to a table in TimeXtender?",        "options": {            "option_a": "By customizing the data cleansing procedure",            "option_b": "Through the 'Add Custom Step' option under Scripts",            "option_c": "By creating a new Custom View",            "option_d": "By deploying and executing a Custom Table Insert"        },        "answer": "option_b",        "explanation": "A Script Action can be added to a table by selecting 'Add Custom Step' from Script Actions under Scripts on a data warehouse."    }}
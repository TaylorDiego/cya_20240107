{    "question_1": {        "question": "What is the primary purpose of setting up an Incremental Load in a TimeXtender ODX instance?",        "options": {            "option_a": "To ensure that all data transfers are full loads",            "option_b": "To allow for updates and deletes in the Data Warehouse",            "option_c": "To transfer only new or changed data since the last load",            "option_d": "To generate a PK table for every data transfer"        },        "answer": "option_c",        "explanation": "Incremental Load is used to transfer only new or changed data since the last load, which improves efficiency by not reloading unchanged data."    },    "question_2": {        "question": "What happens if you do not use deletes in your Incremental Load setup in TimeXtender?",        "options": {            "option_a": "It will only insert new rows without checking for duplicates",            "option_b": "Deletes will still be handled by default",            "option_c": "Incremental Load will be disabled",            "option_d": "All data will be treated as updates"        },        "answer": "option_a",        "explanation": "Without deletes, the Incremental Load will only insert new rows that are larger than the rule field, without checking if the rows already exist in the source."    },    "question_3": {        "question": "In the context of TimeXtender ODX, what is the 'Subtract from value' option used for?",        "options": {            "option_a": "To subtract a fixed value from all numeric fields",            "option_b": "To define the interval for updates on recently created rows",            "option_c": "To remove outdated data from the Data Warehouse",            "option_d": "To calculate the total size of the data source"        },        "answer": "option_b",        "explanation": "The 'Subtract from value' option allows for an offset in incremental selection rules, which can be beneficial for data sources with a created date but not a modified date, allowing updates to occur on rows that have been recently created within the defined interval."    },    "question_4": {        "question": "What is the consequence of not using updates in the Incremental Load setup in TimeXtender?",        "options": {            "option_a": "Updates will be processed as inserts",            "option_b": "Updates in the Data Warehouse will not be possible",            "option_c": "All updates will be ignored",            "option_d": "Full loads will be required less frequently"        },        "answer": "option_b",        "explanation": "If you do not use updates in your Incremental Load setup, you will not be able to use updates in the Data Warehouse, which means that changes to existing data will not be reflected."    },    "question_5": {        "question": "What is the role of a PK (Primary Key) table in the context of Incremental Load with deletes in TimeXtender?",        "options": {            "option_a": "To store the history of all primary keys",            "option_b": "To compare primary keys to the source for updates or deletes",            "option_c": "To generate new primary keys for inserted data",            "option_d": "To archive deleted primary keys"        },        "answer": "option_b",        "explanation": "With deletes, a PK table is generated where the primary keys are compared to the source for updates or deletes, ensuring data integrity by reflecting deletions in the Data Warehouse."    },    "question_6": {        "question": "How does the 'Subtract from value' option handle DateTime fields in TimeXtender's Incremental Load?",        "options": {            "option_a": "It subtracts a fixed number of days from the DateTime field",            "option_b": "It converts the subtraction time to seconds",            "option_c": "It ignores DateTime fields and only applies to Date fields",            "option_d": "It adds a buffer time to account for time zone differences"        },        "answer": "option_b",        "explanation": "When a rule is made on a DateTime field, the 'Subtract from value' time will be converted to seconds, allowing for precise control over the offset for incremental loading."    }}